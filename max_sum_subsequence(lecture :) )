#include <iostream>
#include <vector>
using namespace std;

int cross_middle(vector<int> v, int left, int right){
    int mid = (left+right)/2;
    int left_sum = 0;
    int max_left_sum = 0;
    for ( int i = mid; i >= left; --i ){
        left_sum += v[i];
        if ( left_sum > max_left_sum ) max_left_sum = left_sum;
    }
    int right_sum = 0;
    int max_right_sum = 0;
    for ( int i = mid+1; i <= right; ++i ){
        right_sum += v[i];
        if ( right_sum > max_right_sum ) max_right_sum = right_sum;
    }
    return max_left_sum+max_right_sum;
}

int from_interval(vector<int > v, int left, int right){
    if ( left == right ){ return v[left]; }
    int middle = (left+right)/2;
    int just_left = from_interval(v, left, middle);
    int just_right = from_interval(v, middle+1, right);
    int across = cross_middle(v, left, right);
    return max((just_left, just_right), across);
}

int main()
{
    vector<int > v;
    int x, n; cin >> n;
    for ( int i = 0; i < n; ++i ) { cin >> x; v.push_back(x); }
    cout << "> " << from_interval(v, 0, n-1);
    return 0;
}
